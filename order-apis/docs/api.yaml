openapi: 3.0.0
info:
  title: Order API
  description: API for managing orders in the system
  version: 1.0.0

servers:
  - url: 'http://localhost:3001/v1'

paths:
  /orders:
    get:
      summary: Get a list of orders
      description: Retrieve a list of orders with optional filters and pagination
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
        - in: query
          name: status
          schema:
            type: string
            enum:
              - Pending
              - Processing
              - Completed
              - Cancelled
          description: Filter by order status
        - in: query
          name: paymentStatus
          schema:
            type: string
            enum:
              - Paid
              - Pending
              - Failed
          description: Filter by payment status
        - in: query
          name: deliveryStatus
          schema:
            type: string
            enum:
              - Shipped
              - Delivered
              - In Transit
              - Returned
          description: Filter by delivery status
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - customerName
              - totalAmount
              - status
              - createdAt
          description: Sort results by a specific field
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
          description: Sort order (ascending or descending)
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    description: Total number of orders
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Order ID
                        customerName:
                          type: string
                          description: Customer name
                        totalAmount:
                          type: number
                          format: float
                          description: Total amount of the order
                        status:
                          type: string
                          enum:
                            - Pending
                            - Processing
                            - Completed
                            - Cancelled
                          description: Order status
                        createdAt:
                          type: string
                          format: date-time
                          description: Order creation timestamp

    post:
      summary: Create a new order
      description: Create a new order with product details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - customerName
                - shippingAddress
                - billingAddress
                - totalAmount
                - products
              properties:
                customerName:
                  type: string
                shippingAddress:
                  type: string
                billingAddress:
                  type: string
                currency:
                  type: string
                  default: "USD"
                paymentMethod:
                  type: string
                  default: "Visa"
                paymentStatus:
                  type: string
                  enum:
                    - Paid
                    - Pending
                    - Failed
                  default: "Pending"
                trackingNumber:
                  type: string
                deliveryStatus:
                  type: string
                  enum:
                    - Shipped
                    - Delivered
                    - In Transit
                    - Returned
                notes:
                  type: string
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - productId
                      - quantity
                    properties:
                      productId:
                        type: string
                      quantity:
                        type: integer
                        minimum: 1
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  orderId:
                    type: string

  /orders/{id}:
    get:
      summary: Get an order by ID
      description: Retrieve details of a single order by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the order
      responses:
        '200':
          description: A single order
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  customerName:
                    type: string
                  shippingAddress:
                    type: string
                  billingAddress:
                    type: string
                  totalAmount:
                    type: number
                    format: float
                  status:
                    type: string
                    enum:
                      - Pending
                      - Processing
                      - Completed
                      - Cancelled
                  createdAt:
                    type: string
                    format: date-time
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                        quantity:
                          type: integer
    patch:
      summary: Update an order
      description: Update specific details of an existing order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the order to update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingAddress:
                  type: string
                billingAddress:
                  type: string
                status:
                  type: string
                  enum:
                    - Pending
                    - Processing
                    - Completed
                    - Cancelled
                paymentStatus:
                  type: string
                  enum:
                    - Paid
                    - Pending
                    - Failed
                deliveryStatus:
                  type: string
                  enum:
                    - Shipped
                    - Delivered
                    - In Transit
                    - Returned
                notes:
                  type: string
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      summary: Delete (cancel) an order
      description: Mark an order as cancelled if its status is not already cancelled
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the order to cancel
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

